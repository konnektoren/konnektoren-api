version: "3.8"

services:
  konnektoren-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/konnektoren/konnektoren-api:latest
    environment:
      - RUST_LOG=${LOG_LEVEL}
      - MNEMONIC=${MNEMONIC}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - FAUCET_ADDRESS=${FAUCET_ADDRESS}
      - REDIS_URL=redis://redis:6379
      - ENABLE_TELEMETRY=${ENABLE_TELEMETRY:-false}
      - ENABLE_METRICS=${ENABLE_METRICS:-false}
      - JAEGER_ENDPOINT=${JAEGER_ENDPOINT:-http://jaeger:14268/api/traces}
      - JAEGER_METRICS_ENDPOINT=${JAEGER_METRICS_ENDPOINT:-http://jaeger:4318/v1/metrics}
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:-http://jaeger:4318/v1/metrics}
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:-http://jaeger:4318/v1/traces}
    #ports:
    #  - "3000:3000"
    env_file:
      - .env
    restart: unless-stopped

  telegram_bot:
    profiles:
      - telegram
    image: konnektoren-telegram-bot
    environment:
      - TELOXIDE_TOKEN=${TELOXIDE_TOKEN}
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=${LOG_LEVEL}
    env_file:
      - .env
    restart: unless-stopped

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - ./redis-data:/data

  cloudflared:
    profiles:
      - cloudflare
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token ${CF_TUNNEL_TOKEN}
    environment:
      - CF_TUNNEL_TOKEN=${CF_TUNNEL_TOKEN}
    depends_on:
      - konnektoren-api

  matchbox:
    profiles:
      - matchbox
    image: jhelsing/matchbox-server:v0.10.0
    environment:
      - MATCHBOX_SERVER_PORT=3536

  jaeger:
    profiles:
      - tracing
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_HTTP_PORT=4318
      - COLLECTOR_OTLP_GRPC_PORT=4317
      - METRICS_STORAGE_TYPE=prometheus
      - METRICS_PROMETHEUS_SERVER_URL=http://prometheus:9090
    volumes:
      - jaeger-data:/badger

  prometheus:
    image: prom/prometheus:latest
    profiles:
      - metrics
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"

  grafana:
    image: grafana/grafana:latest
    profiles:
      - metrics
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      - prometheus

volumes:
  jaeger-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: konnektoren-network
    driver: bridge
